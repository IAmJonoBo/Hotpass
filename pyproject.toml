[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hotpass"
version = "0.1.0"
description = "Hotpass data refinement pipeline"
readme = "README.md"
requires-python = ">=3.13,<3.14"
license = "LicenseRef-Proprietary"
dependencies = [
  "pandas>=2.3.3",
  "openpyxl>=3.1.5",
  "pandera>=0.26.1",
  "great-expectations>=1.8.1",
  "phonenumbers>=9.0.17",
  "polars>=1.35.1",
  "duckdb>=1.4.1",
  "frictionless>=5.18.1",
  "rich>=14.2.0",
  "pyyaml>=6.0.3",
  "opentelemetry-api>=1.38.0",
  "opentelemetry-sdk>=1.38.0",
  "prefect>=3.5.0",
  "requests>=2.32.5",
  "trafilatura>=2.0.0",
  "types-PyYAML>=6.0.12.20250915",
  "detect-secrets>=1.5.0",
  "license-expression>=30.4.4",
  "nameparser>=1.1.3",
  "python-stdnum>=2.1",
  "pyarrow>=21.0.0,<22.0.0",
  "rapidfuzz>=3.14.2",
  "hypothesis>=6.142.5",
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "pytest-asyncio>=1.2.0",
  "streamlit>=1.51.0",
]

[project.optional-dependencies]
orchestration = [
  "prefect>=3.5.0",
  "opentelemetry-api>=1.38.0",
  "opentelemetry-sdk>=1.38.0",
  "opentelemetry-exporter-otlp-proto-grpc>=1.38.0",
]

entity_resolution = ["splink>=3.9.0", "rapidfuzz>=3.9.2"]

ml_scoring = ["scikit-learn>=1.5.0", "xgboost>=2.0.0", "mlflow>=2.10.0"]

enrichment = [
  "trafilatura>=2.0.0",
  "playwright>=1.55.0",
  "requests>=2.32.5",
  "scrapy>=2.13.3",
]

geospatial = ["geopy>=2.4.0", "geopandas>=0.14.0"]

compliance = ["presidio-analyzer>=2.2.0", "presidio-anonymizer>=2.2.0"]

dashboards = ["streamlit>=1.40.0"]

caching = ["redis>=5.0.0"]

versioning = ["dvc[s3]>=3.0.0"]

platform = ["boto3>=1.35.0"]

dev = [
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "pytest-asyncio>=1.2.0",
  "hypothesis>=6.142.5",
  "mypy>=1.18.2",
  "ruff>=0.14.3",
  "bandit>=1.8.6",
  "black>=25.9.0",
  "pre-commit>=4.3.0",
  "detect-secrets>=1.5.0",
  "types-PyYAML>=6.0.12.20250915",
  "cyclonedx-bom>=7.2.1",
  "mutmut>=3.3.1",
  "dolphin-mcp>=0.1.3",
  "lmstudio>=1.5.0",
]

docs = [
  "sphinx>=8.2.3",
  "myst-parser>=4.0.1",
  "sphinx-autodoc-typehints>=3.5.2",
  "furo>=2025.9.25",
  "linkify-it-py>=2.0.3",
]

[project.scripts]
hotpass = "hotpass.cli:main"
hotpass-enhanced = "hotpass.cli_enhanced:main"


[tool.ruff]
line-length = 100
extend-exclude = ["data", "frontier-repo-template", "tests"]
src = ["apps/data-platform", "ops"]

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP"]
ignore = ["E203"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
addopts = "--maxfail=1 --disable-warnings --cov=apps/data-platform --cov-report=term-missing"
pythonpath = ["apps/data-platform"]
markers = ["accessibility: accessibility semantics checks"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.13"
namespace_packages = true
mypy_path = ["apps/data-platform"]
files = [
  "apps/data-platform/hotpass/pipeline/config.py",
  "apps/data-platform/hotpass/storage/adapters.py",
  "apps/data-platform/hotpass/domain/party/schemas.py",
  "apps/data-platform/hotpass/_compat_nameparser.py",
  "apps/data-platform/hotpass/orchestration.py",
  "apps/data-platform/hotpass/pipeline/orchestrator.py",
  "apps/data-platform/hotpass/telemetry/bootstrap.py",
  "apps/data-platform/hotpass/telemetry/registry.py",
  "ops/quality/fitness_functions.py",
]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
show_error_codes = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
follow_imports = "skip"

[[tool.mypy.overrides]]
module = ["hotpass.pipeline.config"]
strict = true

[[tool.mypy.overrides]]
module = ["hotpass.orchestration"]
strict = true

[[tool.mypy.overrides]]
module = ["hotpass.pipeline.orchestrator"]
strict = true

[[tool.mypy.overrides]]
module = ["ops.quality.fitness_functions"]
strict = true

[[tool.mypy.overrides]]
module = ["hotpass.telemetry.bootstrap", "hotpass.telemetry.registry"]
strict = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = ["ops.quality.*"]
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = ["pydantic", "pydantic.*"]
follow_imports = "normal"
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = [
  "anyio",
  "anyio.*",
  "prefect",
  "prefect.*",
  "great_expectations",
  "great_expectations.*",
  "polars",
  "polars.*",
  "duckdb",
  "duckdb.*",
  "rapidfuzz",
  "rapidfuzz.*",
  "trafilatura",
  "trafilatura.*",
  "geopandas",
  "geopandas.*",
  "openpyxl",
  "openpyxl.*",
  "presidio_analyzer",
  "presidio_analyzer.*",
  "presidio_anonymizer",
  "presidio_anonymizer.*",
  "frictionless",
  "frictionless.*",
  "opentelemetry",
  "opentelemetry.*",
  "rich",
  "rich.*",
  "semgrep",
  "semgrep.*",
  "xgboost",
  "xgboost.*",
  "scipy",
  "scipy.*",
  "pandas",
  "pandas.*",
  "numpy",
  "numpy.*",
  "geopy",
  "geopy.*",
  "pyarrow",
  "pyarrow.*",
  "dns",
  "dns.*",
  "license_expression",
  "license_expression.*",
  "sklearn",
  "sklearn.*",
  "shapely",
  "shapely.*",
  "playwright",
  "playwright.*",
  "nameparser",
  "nameparser.*",
  "apprise",
  "apprise.*",
  "streamlit",
  "streamlit.*",
  "marshmallow",
  "marshmallow.*",
  "mlflow",
  "mlflow.*",
]
ignore_missing_imports = true

[tool.coverage.run]
branch = true
source = ["apps/data-platform"]
omit = [
  "apps/data-platform/hotpass/optimize.py",
  "apps/data-platform/hotpass/automation/*",
  "apps/data-platform/hotpass/telemetry/*",
  "apps/data-platform/hotpass/linkage/*",
  "apps/data-platform/hotpass/transform/scoring.py",
  "apps/data-platform/hotpass/transform/normalize.py",
  "tests/test_ml_tracking.py",
  "tests/test_scoring.py",
]

[tool.coverage.report]
show_missing = true
skip_empty = true

[tool.mutmut]
paths_to_mutate = [
  "apps/data-platform/hotpass/quality.py",
  "apps/data-platform/hotpass/pipeline_enhanced.py",
]
tests_dir = [
  "tests/test_quality.py",
  "tests/test_quality_report.py",
  "tests/test_pipeline_enhanced.py",
  "tests/contracts",
]
also_copy = ["apps/data-platform/hotpass"]

[tool.setuptools]
package-dir = { "" = "apps/data-platform" }
include-package-data = true

[tool.setuptools.data-files]
"hotpass/schemas" = ["schemas/*.json"]
"hotpass/data_expectations" = ["data_expectations/*.json"]
"hotpass/data_expectations/reachout" = ["data_expectations/reachout/*.json"]
"hotpass/data_expectations/contact" = ["data_expectations/contact/*.json"]
"hotpass/data_expectations/sacaa" = ["data_expectations/sacaa/*.json"]
"hotpass/data_expectations/suites" = ["data_expectations/suites/*.json"]
"hotpass/data_expectations/checkpoints" = [
  "data_expectations/checkpoints/*.json",
]

[dependency-groups]
dev = ["types-requests>=2.32.4.20250913"]
