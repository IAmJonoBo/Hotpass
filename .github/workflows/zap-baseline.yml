name: zap-baseline

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  zap:
    runs-on: ubuntu-latest
    env:
      TARGET_URL: ${{ vars.ZAP_BASELINE_TARGET || 'http://127.0.0.1:8501' }}
      UV_EXTRAS: ${{ vars.ZAP_BASELINE_UV_EXTRAS || 'dev dashboards' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up uv and Python
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7
        with:
          python-version: "3.13"

      - name: Install dependencies
        env:
          HOTPASS_UV_EXTRAS: ${{ env.UV_EXTRAS }}
        run: |
          set -euo pipefail
          bash scripts/uv_sync_extras.sh

      - name: Launch Streamlit (if local)
        if: env.TARGET_URL == 'http://127.0.0.1:8501'
        run: |
          nohup uv run streamlit run src/hotpass/dashboard.py --server.headless true --server.port 8501 &
          sleep 15

      - name: OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@de8ad967d3548d44ef623df22cf95c3b0baf8b25 # v0.15.0
        with:
          target: ${{ env.TARGET_URL }}
          fail_action: false

      - name: Upload ZAP report
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: zap-report
          path: zap_report.html
