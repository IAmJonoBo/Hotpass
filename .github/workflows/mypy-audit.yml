name: Mypy Audit

on:
  schedule:
    - cron: "0 5 * * 1" # Mondays at 05:00 UTC
  workflow_dispatch:
    inputs:
      uv_extras:
        description: 'Space-separated uv extras to install (e.g. "dev")'
        required: false
        default: "dev"

permissions:
  contents: read
  issues: write

jobs:
  mypy-audit:
    runs-on: ubuntu-latest
    env:
      UV_EXTRAS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.uv_extras != '' && github.event.inputs.uv_extras || 'dev' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up uv and Python
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7
        with:
          python-version: "3.13"

      - name: Synchronise dependencies
        env:
          HOTPASS_UV_EXTRAS: ${{ env.UV_EXTRAS }}
        run: bash scripts/uv_sync_extras.sh

      - name: Run pre-commit mypy audit
        run: uv run pre-commit run mypy --all-files

      - name: Open tracking issue on failure
        if: failure()
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const {owner, repo} = context.repo;
            const title = `Scheduled mypy audit failure (${context.runId})`;
            const body = [
              `The scheduled mypy audit failed on ${new Date().toISOString()}.`,
              "",
              `Review the run logs for details: https://github.com/${owner}/${repo}/actions/runs/${context.runId}`,
              "",
              "Labels: `type:ci`, `scope:governance`."
            ].join("\n");

            await github.rest.issues.create({
              owner,
              repo,
              title,
              body,
              labels: ["type:ci", "scope:governance"]
            });
